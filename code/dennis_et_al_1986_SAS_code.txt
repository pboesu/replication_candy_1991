*SAS Program to Compute ML Estimates for Logistic Phenology Model;

DATA budworm;
* CONTINUOUS STREAM OF OBSERVATIONS ENTERED INTO SAS DATA SET;
INPUT T N I X @@;
CARDS;

58	16	1	16	58	16	2	0	58	16	3	0	58	16	4	0
58	16	5	0	58	16	6	0	58	16	7	0	82	10	1	10
82	10	2	0	82	10	3	0	82	10	4	0	82	10	5	0
82	10	6	0	82	10	7	0	107	30	1	23	107	30	2	7
107	30	3	0	107	30	4	0	107	30	5	0	107	30	6	0
107	30	7	0	155	47	1	3	155	47	2	44	155	47	3	0
155	47	4	0	155	47	5	0	155	47	6	0	155	47	7	0
237	64	1	0	237	64	2	6	237	64	3	45	237	64	4	13
237	64	5	0	237	64	6	0	237	64	7	0	307	74	1	0
307	74	2	2	307	74	3	9	307	74	4	48	307	74	5	15
307	74	6	0	307	74	7	0	342	72	1	0	342	72	2	0
342	72	3	1	342	72	4	34	342	72	5	37	342	72	6	0
342	72	7	0	388	104	1	0	388	104	2	0	388	104	3	1
388	104	4	10	388	104	5	87	388	104	6	5	388	104	7	0
442	74	1	0	442	74	2	0	442	74	3	0	442	74	4	7
442	74	5	53	442	74	6	21	442	74	7	0	518	76	1	0
518	76	2	0	518	76	3	0	518	76	4	0	518	76	5	10
518	76	6	65	518	76	7	1	609	40	1	0	609	40	2	0
609	40	3	0	609	40	4	0	609	40	5	0	609	40	6	14
609	40	7	26	685	42	1	0	685	42	2	0	685	42	3	0
685	42	4	0	685	42	5	0	685	42	6	0	685	42	7	42
RUN;

PROC NLIN DATA=budworm NOHALVE SIGSQ=1;
* PROVIDE INITIAL PARAMETER VALUES;
PARMS A1=150 A2=230 A3=280 A4=330 A5=440 A6=580 BB=3;
* COMPUTE PROPORTION OF POPULATION EXPECTED IN ITH DEVELOPMENTAL 
* STAGE AT JTH SAMPLE;
IF I=1 THEN P=1/(1+EXP(-(A1-T)/SQRT(BB*T)));
ELSE IF I=2
THEN P=1/(1+EXP(-(A2-T)/SQRT(BB*T)))-1/(1+EXP(-(A1-T)/SQRT(BB*T))); 
ELSE IF I=3
THEN P=1/(1+EXP(-(A3-T)/SQRT(BB*T)))-1/(1+EXP(-(A2-T)/SQRT(BB*T)));
ELSE IF I=4 
THEN P=1/(1+EXP(-(A4-T)/SQRT(BB*T)))-1/(1+EXP(-(A3-T)/SQRT(BB*T)));
ELSE IF I=5
THEN P=1/(1+EXP(-(A5-T)/SQRT(BB*T)))-1/(1+EXP(-(A4-T)/SQRT(BB*T)));
ELSE IF I=6
THEN P=1/(1+EXP(-(A6-T)/SQRT(BB*T)))-1/(1+EXP(-(A5-T)/SQRT(BB*T)));
ELSE IF I=7
THEN P=1/(1+EXP((A6-T)/SQRT(BB*T)));
* USED TO PREVENT NUMERICAL OVERLOAD IN - WEIGHT- STATEMENT 
* WHEN P IS VERY CLOSE TO ZERO;
IF P <0.00000001 THEN P=0.00000001;
* SPECIFY THE NONLINEAR REGRESSION MODEL;
MODEL X=N*P;
* COMPUTE WEIGHT FOR EACH OBSERVATION AT EACH ITERATION;
_WEIGHT_=1/(N*P);
RUN;